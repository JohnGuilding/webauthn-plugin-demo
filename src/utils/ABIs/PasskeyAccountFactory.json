{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IEntryPoint",
          "name": "_entryPoint",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "accountImplementation",
      "outputs": [
        {
          "internalType": "contract PasskeyAccount",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "anEllipticCurve",
          "type": "address"
        },
        {
          "internalType": "uint256[2]",
          "name": "_q",
          "type": "uint256[2]"
        }
      ],
      "name": "createAccount",
      "outputs": [
        {
          "internalType": "contract PasskeyAccount",
          "name": "ret",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "salt",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "anEllipticCurve",
          "type": "address"
        },
        {
          "internalType": "uint256[2]",
          "name": "_q",
          "type": "uint256[2]"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b50604051612ec3380380612ec383398101604081905261002f91610088565b8060405161003c9061007b565b6001600160a01b039091168152602001604051809103906000f080158015610068573d6000803e3d6000fd5b506001600160a01b0316608052506100b8565b61246480610a5f83390190565b60006020828403121561009a57600080fd5b81516001600160a01b03811681146100b157600080fd5b9392505050565b6080516109806100df60003960008181604b0152818160df01526101af01526109806000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806311464fbe14610046578063240192ec1461008957806366a44a7c1461009c575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61006d6100973660046102db565b6100af565b61006d6100aa3660046102db565b610180565b6000806100be86868686610180565b90506001600160a01b0381163b80156100d957509050610178565b8560001b7f000000000000000000000000000000000000000000000000000000000000000088878760405160240161011393929190610385565b60408051601f198184030181529181526020820180516001600160e01b03166343a480b560e01b179052516101479061029c565b6101529291906103f8565b8190604051809103906000f5905080158015610172573d6000803e3d6000fd5b50925050505b949350505050565b60006102558460001b604051806020016101999061029c565b6020820181038252601f19601f820116604052507f00000000000000000000000000000000000000000000000000000000000000008887876040516024016101e393929190610385565b60408051601f19818403018152918152602080830180516001600160e01b03166343a480b560e01b179052905161021c939291016103f8565b60408051601f198184030181529082905261023a929160200161043a565b6040516020818303038152906040528051906020012061025e565b95945050505050565b600061026b838330610272565b9392505050565b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6104e18061046a83390190565b80356001600160a01b03811681146102c057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060a085870312156102f157600080fd5b6102fa856102a9565b93506020808601359350610310604087016102a9565b925086607f87011261032157600080fd5b6040516040810181811067ffffffffffffffff82111715610344576103446102c5565b6040528060a088018981111561035957600080fd5b606089015b81811015610375578035835291840191840161035e565b5096999598509396509450505050565b6001600160a01b0384811682528316602080830191909152608082019060408301908460005b60028110156103c8578151845292820192908201906001016103ab565b50505050949350505050565b60005b838110156103ef5781810151838201526020016103d7565b50506000910152565b60018060a01b038316815260406020820152600082518060408401526104258160608501602087016103d4565b601f01601f1916919091016060019392505050565b6000835161044c8184602088016103d4565b8351908301906104608183602088016103d4565b0194935050505056fe60806040526040516104e13803806104e1833981016040819052610022916102de565b61002e82826000610035565b50506103fb565b61003e83610061565b60008251118061004b5750805b1561005c5761005a83836100a1565b505b505050565b61006a816100cd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100c683836040518060600160405280602781526020016104ba60279139610180565b9392505050565b6001600160a01b0381163b61013f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080856001600160a01b03168560405161019d91906103ac565b600060405180830381855af49150503d80600081146101d8576040519150601f19603f3d011682016040523d82523d6000602084013e6101dd565b606091505b5090925090506101ef868383876101f9565b9695505050505050565b60608315610268578251600003610261576001600160a01b0385163b6102615760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610136565b5081610272565b610272838361027a565b949350505050565b81511561028a5781518083602001fd5b8060405162461bcd60e51b815260040161013691906103c8565b634e487b7160e01b600052604160045260246000fd5b60005b838110156102d55781810151838201526020016102bd565b50506000910152565b600080604083850312156102f157600080fd5b82516001600160a01b038116811461030857600080fd5b60208401519092506001600160401b038082111561032557600080fd5b818501915085601f83011261033957600080fd5b81518181111561034b5761034b6102a4565b604051601f8201601f19908116603f01168101908382118183101715610373576103736102a4565b8160405282815288602084870101111561038c57600080fd5b61039d8360208301602088016102ba565b80955050505050509250929050565b600082516103be8184602087016102ba565b9190910192915050565b60208152600082518060208401526103e78160408501602087016102ba565b601f01601f19169190910160400192915050565b60b1806104096000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea2646970667358221220c32d19b3304b54e537d99822c7adfbba4482fbd46e498f8720eec75590289ef164736f6c63430008130033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220171150c5849cfb621b1a0bbb7c5aeefa35e96cd30a58134557197f2c8b5a45f464736f6c6343000813003360c0604052306080523480156200001557600080fd5b506040516200246438038062002464833981016040819052620000389162000117565b6001600160a01b03811660a0526200004f62000056565b5062000149565b600054610100900460ff1615620000c35760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161462000115576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6000602082840312156200012a57600080fd5b81516001600160a01b03811681146200014257600080fd5b9392505050565b60805160a0516122a8620001bc6000396000818161039b015281816108ca0152818161094b01528181610c3001528181610cc801528181610d940152818161100b01526112ff01526000818161063c0152818161067c015281816109dc01528181610a1c0152610aaf01526122a86000f3fe60806040526004361061014e5760003560e01c806382c1fb6a116100b6578063bc197c811161006f578063bc197c8114610414578063c399ec8814610443578063d087d28814610458578063d259183d1461046d578063f23a6e611461048d578063f83b5dce146104ba57600080fd5b806382c1fb6a146103065780638da5cb5b146103345780639a486cc71461036c578063b0d691fe1461038c578063b61d27f6146103bf578063bbcf334b146103df57600080fd5b806343a480b51161010857806343a480b51461026957806349e894d8146102895780634a58db19146102b65780634d44560d146102be5780634f1ef286146102de57806352d1902d146102f157600080fd5b806223de291461015a57806301ffc9a714610181578063150b7a02146101b657806318dfb3c7146101fb5780633659cfe61461021b5780633a871cdd1461023b57600080fd5b3661015557005b600080fd5b34801561016657600080fd5b5061017f610175366004611839565b5050505050505050565b005b34801561018d57600080fd5b506101a161019c3660046118e9565b6104e0565b60405190151581526020015b60405180910390f35b3480156101c257600080fd5b506101e26101d1366004611913565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016101ad565b34801561020757600080fd5b5061017f6102163660046119c9565b610532565b34801561022757600080fd5b5061017f610236366004611a34565b610632565b34801561024757600080fd5b5061025b610256366004611a51565b610711565b6040519081526020016101ad565b34801561027557600080fd5b5061017f610284366004611aba565b610737565b34801561029557600080fd5b506102a96102a4366004611b5e565b61087c565b6040516101ad9190611bc7565b61017f6108c8565b3480156102ca57600080fd5b5061017f6102d9366004611bda565b610941565b61017f6102ec366004611c92565b6109d2565b3480156102fd57600080fd5b5061025b610aa2565b34801561031257600080fd5b50610326610321366004611ce1565b610b55565b6040516101ad929190611d22565b34801561034057600080fd5b50600354610354906001600160a01b031681565b6040516001600160a01b0390911681526020016101ad565b34801561037857600080fd5b5061025b610387366004611b5e565b610b72565b34801561039857600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610354565b3480156103cb57600080fd5b5061017f6103da366004611d51565b610b89565b3480156103eb57600080fd5b506103ff6103fa366004611ce1565b610bd2565b604080519283526020830191909152016101ad565b34801561042057600080fd5b506101e261042f366004611da0565b63bc197c8160e01b98975050505050505050565b34801561044f57600080fd5b5061025b610c10565b34801561046457600080fd5b5061025b610ca1565b34801561047957600080fd5b506101a1610488366004611e3d565b610cf7565b34801561049957600080fd5b506101e26104a8366004611e96565b63f23a6e6160e01b9695505050505050565b3480156104c657600080fd5b50600054610354906201000090046001600160a01b031681565b60006001600160e01b03198216630a85bd0160e11b148061051157506001600160e01b03198216630271189760e51b145b8061052c57506001600160e01b031982166301ffc9a760e01b145b92915050565b61053a610d89565b8281146105845760405162461bcd60e51b815260206004820152601360248201527277726f6e67206172726179206c656e6774687360681b60448201526064015b60405180910390fd5b60005b8381101561062b576106198585838181106105a4576105a4611f11565b90506020020160208101906105b99190611a34565b60008585858181106105cd576105cd611f11565b90506020028101906105df9190611f27565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e1892505050565b8061062381611f83565b915050610587565b5050505050565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016300361067a5760405162461bcd60e51b815260040161057b90611f9c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166106c360008051602061222c833981519152546001600160a01b031690565b6001600160a01b0316146106e95760405162461bcd60e51b815260040161057b90611fe8565b6106f281610e88565b6040805160008082526020820190925261070e91839190610e90565b50565b600061071b611000565b6107258484611078565b90506107308261128c565b9392505050565b600054610100900460ff16158080156107575750600054600160ff909116105b806107715750303b158015610771575060005460ff166001145b6107d45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161057b565b6000805460ff1916600117905580156107f7576000805461ff0019166101001790555b610800846112d9565b6000805462010000600160b01b031916620100006001600160a01b0386160217905561082f6001836002611790565b508015610876576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050565b606061088782611349565b610894608084901b611349565b60405161060f60f31b6020820152602281019290925260428201526062016040516020818303038152906040529050919050565b7f000000000000000000000000000000000000000000000000000000000000000060405163b760faf960e01b81523060048201526001600160a01b03919091169063b760faf99034906024016000604051808303818588803b15801561092d57600080fd5b505af115801561062b573d6000803e3d6000fd5b6109496114fb565b7f000000000000000000000000000000000000000000000000000000000000000060405163040b850f60e31b81526001600160a01b03848116600483015260248201849052919091169063205c287890604401600060405180830381600087803b1580156109b657600080fd5b505af11580156109ca573d6000803e3d6000fd5b505050505050565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163003610a1a5760405162461bcd60e51b815260040161057b90611f9c565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610a6360008051602061222c833981519152546001600160a01b031690565b6001600160a01b031614610a895760405162461bcd60e51b815260040161057b90611fe8565b610a9282610e88565b610a9e82826001610e90565b5050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610b425760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c0000000000000000606482015260840161057b565b5060008051602061222c83398151915290565b366000610b66607c60248587612034565b915091505b9250929050565b60018160028110610b8257600080fd5b0154905081565b610b91610d89565b610876848484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610e1892505050565b600080610be26020828587612034565b610beb9161205e565b9150610bfb604060208587612034565b610c049161205e565b60001c90509250929050565b6040516370a0823160e01b81523060048201526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a08231906024015b602060405180830381865afa158015610c78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c9c919061207c565b905090565b604051631aab3f0d60e11b8152306004820152600060248201819052906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906335567e1a90604401610c5b565b60008151835114610d0a5750600061052c565b60005b8351811015610d7f57828181518110610d2857610d28611f11565b602001015160f81c60f81b6001600160f81b031916848281518110610d4f57610d4f611f11565b01602001516001600160f81b03191614610d6d57600091505061052c565b80610d7781611f83565b915050610d0d565b5060019392505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480610dca57506003546001600160a01b031633145b610e165760405162461bcd60e51b815260206004820181905260248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e74604482015260640161057b565b565b600080846001600160a01b03168484604051610e349190612095565b60006040518083038185875af1925050503d8060008114610e71576040519150601f19603f3d011682016040523d82523d6000602084013e610e76565b606091505b50915091508161062b57805160208201fd5b61070e6114fb565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615610ec857610ec38361154c565b505050565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015610f22575060408051601f3d908101601f19168201909252610f1f9181019061207c565b60015b610f855760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b606482015260840161057b565b60008051602061222c8339815191528114610ff45760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b606482015260840161057b565b50610ec38383836115e8565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610e165760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161057b565b600080808061108b610140870187611f27565b81019061109891906120b1565b925092509250600080306001600160a01b031663bbcf334b866040518263ffffffff1660e01b81526004016110cd9190611bc7565b6040805180830381865afa1580156110e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061110d9190612138565b9150915060006002856040516111239190612095565b602060405180830381855afa158015611140573d6000803e3d6000fd5b5050506040513d601f19601f82011682018060405250810190611163919061207c565b90506000848260405160200161117a92919061215c565b6040516020818303038152906040529050600060028260405161119d9190612095565b602060405180830381855afa1580156111ba573d6000803e3d6000fd5b5050506040513d601f19601f820116820180604052508101906111dd919061207c565b600080546040805180820182528981526020810189905290516304e960d760e01b81529394509192620100009091046001600160a01b0316916304e960d79161122d91869160019060040161217e565b602060405180830381865afa15801561124a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061126e91906121df565b90508061127a57600080fd5b5060009b9a5050505050505050505050565b801561070e57604051600090339060001990849084818181858888f193505050503d806000811461062b576040519150601f19603f3d011682016040523d82523d6000602084013e61062b565b600380546001600160a01b0319166001600160a01b0383811691821790925560405190917f000000000000000000000000000000000000000000000000000000000000000016907f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de90600090a350565b7aff00000000000000ff00000000000000ff00000000000000ff00006bffffffff0000000000000000604083901c90811663ffffffff60c01b84161760201c63ffffffff60601b919091166001600160e01b031984161717601081901c9182167eff00000000000000ff00000000000000ff00000000000000ff000000000000821617600890811c7bff00000000000000ff00000000000000ff00000000000000ff000000939093167fff00000000000000ff00000000000000ff00000000000000ff000000000000009290921691909117919091179081901c7e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f167f0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f00600492831c161790611497827f0606060606060606060606060606060606060606060606060606060606060606612201565b901c7f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f1660076114c79190612214565b6114f1827f3030303030303030303030303030303030303030303030303030303030303030612201565b61052c9190612201565b6003546001600160a01b031633148061151357503330145b610e165760405162461bcd60e51b815260206004820152600a60248201526937b7363c9037bbb732b960b11b604482015260640161057b565b6001600160a01b0381163b6115b95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b606482015260840161057b565b60008051602061222c83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6115f18361160d565b6000825111806115fe5750805b15610ec357610876838361164d565b6116168161154c565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610730838360405180606001604052806027815260200161224c602791396060600080856001600160a01b03168560405161168a9190612095565b600060405180830381855af49150503d80600081146116c5576040519150601f19603f3d011682016040523d82523d6000602084013e6116ca565b606091505b50915091506116db868383876116e5565b9695505050505050565b6060831561175457825160000361174d576001600160a01b0385163b61174d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161057b565b508161175e565b61175e8383611766565b949350505050565b8151156117765781518083602001fd5b8060405162461bcd60e51b815260040161057b9190611bc7565b82600281019282156117be579160200282015b828111156117be5782518255916020019190600101906117a3565b506117ca9291506117ce565b5090565b5b808211156117ca57600081556001016117cf565b6001600160a01b038116811461070e57600080fd5b60008083601f84011261180a57600080fd5b5081356001600160401b0381111561182157600080fd5b602083019150836020828501011115610b6b57600080fd5b60008060008060008060008060c0898b03121561185557600080fd5b8835611860816117e3565b97506020890135611870816117e3565b96506040890135611880816117e3565b95506060890135945060808901356001600160401b03808211156118a357600080fd5b6118af8c838d016117f8565b909650945060a08b01359150808211156118c857600080fd5b506118d58b828c016117f8565b999c989b5096995094979396929594505050565b6000602082840312156118fb57600080fd5b81356001600160e01b03198116811461073057600080fd5b60008060008060006080868803121561192b57600080fd5b8535611936816117e3565b94506020860135611946816117e3565b93506040860135925060608601356001600160401b0381111561196857600080fd5b611974888289016117f8565b969995985093965092949392505050565b60008083601f84011261199757600080fd5b5081356001600160401b038111156119ae57600080fd5b6020830191508360208260051b8501011115610b6b57600080fd5b600080600080604085870312156119df57600080fd5b84356001600160401b03808211156119f657600080fd5b611a0288838901611985565b90965094506020870135915080821115611a1b57600080fd5b50611a2887828801611985565b95989497509550505050565b600060208284031215611a4657600080fd5b8135610730816117e3565b600080600060608486031215611a6657600080fd5b83356001600160401b03811115611a7c57600080fd5b84016101608187031215611a8f57600080fd5b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b600080600060808486031215611acf57600080fd5b8335611ada816117e3565b9250602084810135611aeb816117e3565b9250605f85018613611afc57600080fd5b604051604081018181106001600160401b0382111715611b1e57611b1e611aa4565b604052806080870188811115611b3357600080fd5b604088015b81811015611b4f5780358352918401918401611b38565b50505080925050509250925092565b600060208284031215611b7057600080fd5b5035919050565b60005b83811015611b92578181015183820152602001611b7a565b50506000910152565b60008151808452611bb3816020860160208601611b77565b601f01601f19169290920160200192915050565b6020815260006107306020830184611b9b565b60008060408385031215611bed57600080fd5b8235611bf8816117e3565b946020939093013593505050565b600082601f830112611c1757600080fd5b81356001600160401b0380821115611c3157611c31611aa4565b604051601f8301601f19908116603f01168101908282118183101715611c5957611c59611aa4565b81604052838152866020858801011115611c7257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215611ca557600080fd5b8235611cb0816117e3565b915060208301356001600160401b03811115611ccb57600080fd5b611cd785828601611c06565b9150509250929050565b60008060208385031215611cf457600080fd5b82356001600160401b03811115611d0a57600080fd5b611d16858286016117f8565b90969095509350505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60008060008060608587031215611d6757600080fd5b8435611d72816117e3565b93506020850135925060408501356001600160401b03811115611d9457600080fd5b611a28878288016117f8565b60008060008060008060008060a0898b031215611dbc57600080fd5b8835611dc7816117e3565b97506020890135611dd7816117e3565b965060408901356001600160401b0380821115611df357600080fd5b611dff8c838d01611985565b909850965060608b0135915080821115611e1857600080fd5b611e248c838d01611985565b909650945060808b01359150808211156118c857600080fd5b60008060408385031215611e5057600080fd5b82356001600160401b0380821115611e6757600080fd5b611e7386838701611c06565b93506020850135915080821115611e8957600080fd5b50611cd785828601611c06565b60008060008060008060a08789031215611eaf57600080fd5b8635611eba816117e3565b95506020870135611eca816117e3565b9450604087013593506060870135925060808701356001600160401b03811115611ef357600080fd5b611eff89828a016117f8565b979a9699509497509295939492505050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112611f3e57600080fd5b8301803591506001600160401b03821115611f5857600080fd5b602001915036819003821315610b6b57600080fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611f9557611f95611f6d565b5060010190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000808585111561204457600080fd5b8386111561205157600080fd5b5050820193919092039150565b8035602083101561052c57600019602084900360031b1b1692915050565b60006020828403121561208e57600080fd5b5051919050565b600082516120a7818460208701611b77565b9190910192915050565b6000806000606084860312156120c657600080fd5b83356001600160401b03808211156120dd57600080fd5b6120e987838801611c06565b945060208601359150808211156120ff57600080fd5b61210b87838801611c06565b9350604086013591508082111561212157600080fd5b5061212e86828701611c06565b9150509250925092565b6000806040838503121561214b57600080fd5b505080516020909101519092909150565b6000835161216e818460208801611b77565b9190910191825250602001919050565b83815260a0810160208083018560005b60028110156121ab5781518352918301919083019060010161218e565b505050606083018460005b60028110156121d3578154835291830191600191820191016121b6565b50505050949350505050565b6000602082840312156121f157600080fd5b8151801515811461073057600080fd5b8082018082111561052c5761052c611f6d565b808202811582820484141761052c5761052c611f6d56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220144a2b844d30396525edd276c4b8ed459b74efb8438e37f2abd72a6e5d55984064736f6c63430008130033",
    "sourceMap": "602:2201:50:-:0;;;699:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;789:11;770:31;;;;;:::i;:::-;-1:-1:-1;;;;;511:32:53;;;493:51;;481:2;466:18;770:31:50;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;746:55:50;;;-1:-1:-1;602:2201:50;;;;;;;;;;:::o;14:309:53:-;103:6;156:2;144:9;135:7;131:23;127:32;124:52;;;172:1;169;162:12;124:52;198:16;;-1:-1:-1;;;;;243:31:53;;233:42;;223:70;;289:1;286;279:12;223:70;312:5;14:309;-1:-1:-1;;;14:309:53:o;328:222::-;602:2201:50;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806311464fbe14610046578063240192ec1461008957806366a44a7c1461009c575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61006d6100973660046102db565b6100af565b61006d6100aa3660046102db565b610180565b6000806100be86868686610180565b90506001600160a01b0381163b80156100d957509050610178565b8560001b7f000000000000000000000000000000000000000000000000000000000000000088878760405160240161011393929190610385565b60408051601f198184030181529181526020820180516001600160e01b03166343a480b560e01b179052516101479061029c565b6101529291906103f8565b8190604051809103906000f5905080158015610172573d6000803e3d6000fd5b50925050505b949350505050565b60006102558460001b604051806020016101999061029c565b6020820181038252601f19601f820116604052507f00000000000000000000000000000000000000000000000000000000000000008887876040516024016101e393929190610385565b60408051601f19818403018152918152602080830180516001600160e01b03166343a480b560e01b179052905161021c939291016103f8565b60408051601f198184030181529082905261023a929160200161043a565b6040516020818303038152906040528051906020012061025e565b95945050505050565b600061026b838330610272565b9392505050565b6000604051836040820152846020820152828152600b8101905060ff815360559020949350505050565b6104e18061046a83390190565b80356001600160a01b03811681146102c057600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60008060008060a085870312156102f157600080fd5b6102fa856102a9565b93506020808601359350610310604087016102a9565b925086607f87011261032157600080fd5b6040516040810181811067ffffffffffffffff82111715610344576103446102c5565b6040528060a088018981111561035957600080fd5b606089015b81811015610375578035835291840191840161035e565b5096999598509396509450505050565b6001600160a01b0384811682528316602080830191909152608082019060408301908460005b60028110156103c8578151845292820192908201906001016103ab565b50505050949350505050565b60005b838110156103ef5781810151838201526020016103d7565b50506000910152565b60018060a01b038316815260406020820152600082518060408401526104258160608501602087016103d4565b601f01601f1916919091016060019392505050565b6000835161044c8184602088016103d4565b8351908301906104608183602088016103d4565b0194935050505056fe60806040526040516104e13803806104e1833981016040819052610022916102de565b61002e82826000610035565b50506103fb565b61003e83610061565b60008251118061004b5750805b1561005c5761005a83836100a1565b505b505050565b61006a816100cd565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606100c683836040518060600160405280602781526020016104ba60279139610180565b9392505050565b6001600160a01b0381163b61013f5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc80546001600160a01b0319166001600160a01b0392909216919091179055565b6060600080856001600160a01b03168560405161019d91906103ac565b600060405180830381855af49150503d80600081146101d8576040519150601f19603f3d011682016040523d82523d6000602084013e6101dd565b606091505b5090925090506101ef868383876101f9565b9695505050505050565b60608315610268578251600003610261576001600160a01b0385163b6102615760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610136565b5081610272565b610272838361027a565b949350505050565b81511561028a5781518083602001fd5b8060405162461bcd60e51b815260040161013691906103c8565b634e487b7160e01b600052604160045260246000fd5b60005b838110156102d55781810151838201526020016102bd565b50506000910152565b600080604083850312156102f157600080fd5b82516001600160a01b038116811461030857600080fd5b60208401519092506001600160401b038082111561032557600080fd5b818501915085601f83011261033957600080fd5b81518181111561034b5761034b6102a4565b604051601f8201601f19908116603f01168101908382118183101715610373576103736102a4565b8160405282815288602084870101111561038c57600080fd5b61039d8360208301602088016102ba565b80955050505050509250929050565b600082516103be8184602087016102ba565b9190910192915050565b60208152600082518060208401526103e78160408501602087016102ba565b601f01601f19169190910160400192915050565b60b1806104096000396000f3fe608060405236601057600e6013565b005b600e5b601f601b6021565b6058565b565b600060537f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156076573d6000f35b3d6000fdfea2646970667358221220c32d19b3304b54e537d99822c7adfbba4482fbd46e498f8720eec75590289ef164736f6c63430008130033416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220171150c5849cfb621b1a0bbb7c5aeefa35e96cd30a58134557197f2c8b5a45f464736f6c63430008130033",
    "sourceMap": "602:2201:50:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;639:53;;;;;;;;-1:-1:-1;;;;;210:32:53;;;192:51;;180:2;165:18;639:53:50;;;;;;;1188:742;;;;;;:::i;:::-;;:::i;2055:746::-;;;;;;:::i;:::-;;:::i;1188:742::-;1341:18;1371:12;1386:44;1397:5;1404:4;1410:15;1427:2;1386:10;:44::i;:::-;1371:59;-1:-1:-1;;;;;;1456:16:50;;;1486:12;;1482:79;;-1:-1:-1;1544:4:50;-1:-1:-1;1514:36:50;;1482:79;1660:4;1652:13;;1696:21;1832:5;1839:15;1856:2;1740:141;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1740:141:50;;;;;;;;;;;;;;-1:-1:-1;;;;;1740:141:50;-1:-1:-1;;;1740:141:50;;;1629:270;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:353;;1361:569;;1188:742;;;;;;;:::o;2055:746::-;2210:7;2248:546;2296:4;2288:13;;2392:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2497:21;2657:5;2664:15;2681:2;2549:165;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;2549:165:50;;;;;;;;;;;;;;;-1:-1:-1;;;;;2549:165:50;-1:-1:-1;;;2549:165:50;;;2449:291;;;;;2549:165;2449:291;;:::i;:::-;;;;-1:-1:-1;;2449:291:50;;;;;;;;;;2350:412;;;2449:291;2350:412;;:::i;:::-;;;;;;;;;;;;;2319:461;;;;;;2248:22;:546::i;:::-;2229:565;2055:746;-1:-1:-1;;;;;2055:746:50:o;1769:165:39:-;1852:7;1878:49;1893:4;1899:12;1921:4;1878:14;:49::i;:::-;1871:56;1769:165;-1:-1:-1;;;1769:165:39:o;2177:1772::-;2278:12;2385:4;2379:11;3604:12;3597:4;3592:3;3588:14;3581:36;3653:4;3646;3641:3;3637:14;3630:28;3683:8;3678:3;3671:21;3776:4;3771:3;3767:14;3754:27;;3887:4;3880:5;3872:20;3930:2;3913:20;;;2177:1772;-1:-1:-1;;;;2177:1772:39:o;-1:-1:-1:-;;;;;;;;:::o;254:173:53:-;322:20;;-1:-1:-1;;;;;371:31:53;;361:42;;351:70;;417:1;414;407:12;351:70;254:173;;;:::o;432:127::-;493:10;488:3;484:20;481:1;474:31;524:4;521:1;514:15;548:4;545:1;538:15;564:992;673:6;681;689;697;750:3;738:9;729:7;725:23;721:33;718:53;;;767:1;764;757:12;718:53;790:29;809:9;790:29;:::i;:::-;780:39;;838:2;887;876:9;872:18;859:32;849:42;;910:38;944:2;933:9;929:18;910:38;:::i;:::-;900:48;;992:7;986:3;975:9;971:19;967:33;957:61;;1014:1;1011;1004:12;957:61;1047:2;1041:9;1089:2;1081:6;1077:15;1158:6;1146:10;1143:22;1122:18;1110:10;1107:34;1104:62;1101:88;;;1169:18;;:::i;:::-;1205:2;1198:22;1240:6;1284:3;1269:19;;1300;;;1297:39;;;1332:1;1329;1322:12;1297:39;1371:2;1360:9;1356:18;1383:142;1399:6;1394:3;1391:15;1383:142;;;1465:17;;1453:30;;1503:12;;;;1416;;1383:142;;;-1:-1:-1;564:992:53;;;;-1:-1:-1;564:992:53;;-1:-1:-1;1544:6:53;-1:-1:-1;;;;564:992:53:o;1769:681::-;-1:-1:-1;;;;;2074:15:53;;;2056:34;;2147:15;;2109:2;2127:18;;;2120:43;;;;2005:3;1990:19;;;2198:2;2183:18;;;2243:6;1963:4;2277:167;2291:4;2288:1;2285:11;2277:167;;;2350:13;;2338:26;;2384:12;;;;2419:15;;;;2311:1;2304:9;2277:167;;;2281:3;;;;1769:681;;;;;;:::o;2455:250::-;2540:1;2550:113;2564:6;2561:1;2558:13;2550:113;;;2640:11;;;2634:18;2621:11;;;2614:39;2586:2;2579:10;2550:113;;;-1:-1:-1;;2697:1:53;2679:16;;2672:27;2455:250::o;2710:491::-;2914:1;2910;2905:3;2901:11;2897:19;2889:6;2885:32;2874:9;2867:51;2954:2;2949;2938:9;2934:18;2927:30;2848:4;2986:6;2980:13;3029:6;3024:2;3013:9;3009:18;3002:34;3045:79;3117:6;3112:2;3101:9;3097:18;3092:2;3084:6;3080:15;3045:79;:::i;:::-;3185:2;3164:15;-1:-1:-1;;3160:29:53;3145:45;;;;3192:2;3141:54;;2710:491;-1:-1:-1;;;2710:491:53:o;3206:492::-;3381:3;3419:6;3413:13;3435:66;3494:6;3489:3;3482:4;3474:6;3470:17;3435:66;:::i;:::-;3564:13;;3523:16;;;;3586:70;3564:13;3523:16;3633:4;3621:17;;3586:70;:::i;:::-;3672:20;;3206:492;-1:-1:-1;;;;3206:492:53:o",
    "linkReferences": {},
    "immutableReferences": {
      "34449": [
        {
          "start": 75,
          "length": 32
        },
        {
          "start": 223,
          "length": 32
        },
        {
          "start": 431,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "accountImplementation()": "11464fbe",
    "createAccount(address,uint256,address,uint256[2])": "240192ec",
    "getAddress(address,uint256,address,uint256[2])": "66a44a7c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IEntryPoint\",\"name\":\"_entryPoint\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"accountImplementation\",\"outputs\":[{\"internalType\":\"contract PasskeyAccount\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"anEllipticCurve\",\"type\":\"address\"},{\"internalType\":\"uint256[2]\",\"name\":\"_q\",\"type\":\"uint256[2]\"}],\"name\":\"createAccount\",\"outputs\":[{\"internalType\":\"contract PasskeyAccount\",\"name\":\"ret\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"salt\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"anEllipticCurve\",\"type\":\"address\"},{\"internalType\":\"uint256[2]\",\"name\":\"_q\",\"type\":\"uint256[2]\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAccount(address,uint256,address,uint256[2])\":{\"notice\":\"create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation\"},\"getAddress(address,uint256,address,uint256[2])\":{\"notice\":\"calculate the counterfactual address of this account as it would be returned by createAccount()\"}},\"notice\":\"A sample factory contract for PasskeyAccount A UserOperations \\\"initCode\\\" holds the address of the factory, and a method call (to createAccount, in this sample factory). The factory's createAccount returns the target account address even if it is already installed. This way, the entryPoint.getSenderAddress() can be called either before or after the account is created.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/PasskeyAccountFactory.sol\":\"PasskeyAccountFactory\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@account-abstraction/contracts/=lib/account-abstraction/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":account-abstraction/=lib/account-abstraction/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\"]},\"sources\":{\"lib/account-abstraction/contracts/core/BaseAccount.sol\":{\"keccak256\":\"0x5eb3253b32fd8ba8ae7b9d83da8e9924254a4d3d17a8772b41280e8572974b3c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://b2d23d1276f85300e2ad0c7219614a072796b4f5581fd552b0bcaa47904400d3\",\"dweb:/ipfs/QmVWK5WZ3VskNTfCBxLqY4xBP7WGm3cRM9Qhdy56f5TfAk\"]},\"lib/account-abstraction/contracts/core/Helpers.sol\":{\"keccak256\":\"0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746\",\"dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU\"]},\"lib/account-abstraction/contracts/interfaces/IAccount.sol\":{\"keccak256\":\"0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4\",\"dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W\"]},\"lib/account-abstraction/contracts/interfaces/IAggregator.sol\":{\"keccak256\":\"0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b\",\"dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP\"]},\"lib/account-abstraction/contracts/interfaces/IEntryPoint.sol\":{\"keccak256\":\"0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf\",\"dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd\"]},\"lib/account-abstraction/contracts/interfaces/INonceManager.sol\":{\"keccak256\":\"0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2\",\"dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b\"]},\"lib/account-abstraction/contracts/interfaces/IStakeManager.sol\":{\"keccak256\":\"0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f\",\"license\":\"GPL-3.0-only\",\"urls\":[\"bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3\",\"dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ\"]},\"lib/account-abstraction/contracts/interfaces/UserOperation.sol\":{\"keccak256\":\"0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c\",\"dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN\"]},\"lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol\":{\"keccak256\":\"0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3\",\"dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263\",\"dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688\",\"dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"keccak256\":\"0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5\",\"dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"keccak256\":\"0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2\",\"dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82\"]},\"lib/openzeppelin-contracts/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472\",\"dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354\",\"dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed\",\"dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1\",\"dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec\",\"dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"lib/openzeppelin-contracts/contracts/utils/Create2.sol\":{\"keccak256\":\"0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447\",\"dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da\",\"dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2\",\"dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"src/PasskeyAccount.sol\":{\"keccak256\":\"0x982a4e9401e791abb659eb3a300148c6f074fe12039b3a442d585623bca6a0aa\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://ed7403599a7adeeac284de08b52bed436427e1df16605f1848747868609665dd\",\"dweb:/ipfs/QmZcXXFbK2EjJYpCbY877RE2wQ2tfFnE9TJ6qfVVUUpKg1\"]},\"src/PasskeyAccountFactory.sol\":{\"keccak256\":\"0x9cc84055c71c6dceef38fe423a3e763b7f87a1fc5d8bbde8d8e719143d5cd6a3\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3dec0d73bbc058f2898b3bf9139dcc478d64050e62c65ee1be3673838028e852\",\"dweb:/ipfs/QmSrdtswndHqDdjzVhudih24Fi1h6nEvw6ZfGivihdwhkV\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IEntryPoint",
              "name": "_entryPoint",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "accountImplementation",
          "outputs": [
            {
              "internalType": "contract PasskeyAccount",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "anEllipticCurve",
              "type": "address"
            },
            {
              "internalType": "uint256[2]",
              "name": "_q",
              "type": "uint256[2]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createAccount",
          "outputs": [
            {
              "internalType": "contract PasskeyAccount",
              "name": "ret",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "salt",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "anEllipticCurve",
              "type": "address"
            },
            {
              "internalType": "uint256[2]",
              "name": "_q",
              "type": "uint256[2]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "createAccount(address,uint256,address,uint256[2])": {
            "notice": "create an account, and return its address. returns the address even if the account is already deployed. Note that during UserOperation execution, this method is called only if the account is not deployed. This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
          },
          "getAddress(address,uint256,address,uint256[2])": {
            "notice": "calculate the counterfactual address of this account as it would be returned by createAccount()"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@account-abstraction/contracts/=lib/account-abstraction/contracts/",
        ":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        ":account-abstraction/=lib/account-abstraction/contracts/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":openzeppelin/=lib/openzeppelin-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/PasskeyAccountFactory.sol": "PasskeyAccountFactory"
      },
      "libraries": {}
    },
    "sources": {
      "lib/account-abstraction/contracts/core/BaseAccount.sol": {
        "keccak256": "0x5eb3253b32fd8ba8ae7b9d83da8e9924254a4d3d17a8772b41280e8572974b3c",
        "urls": [
          "bzz-raw://b2d23d1276f85300e2ad0c7219614a072796b4f5581fd552b0bcaa47904400d3",
          "dweb:/ipfs/QmVWK5WZ3VskNTfCBxLqY4xBP7WGm3cRM9Qhdy56f5TfAk"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/core/Helpers.sol": {
        "keccak256": "0x591c87519f7155d1909210276b77925ab2722a99b7b5d5649aecc36ebbdb045a",
        "urls": [
          "bzz-raw://69643e83f68e6a13d5075c7565bfce326673b0bd98c432033c4603ea84835746",
          "dweb:/ipfs/QmSwSzjYyV7qudi5vvsmzHMG2Z4YJZxX51RRXXVCLaNcEU"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAccount.sol": {
        "keccak256": "0x556a0e5980de18e90b115553ed502408155ba35f58642823010d9288047bc418",
        "urls": [
          "bzz-raw://a0f420134b79596db8737173c7b933ae0a33059e107b6327c43aa40d4744a9e4",
          "dweb:/ipfs/QmRo8s1AhXmEMV7uPYnbpYwU19e9Bk6jmYBJTiPx3Fo85W"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IAggregator.sol": {
        "keccak256": "0x060e9ddb0152250c269ba0640dc5753834ac44cf182a2837d508c0c529cae26a",
        "urls": [
          "bzz-raw://20ed837bc5909c89ff1910246bf245a5dad6840aa939382e1694964eb7dbd37b",
          "dweb:/ipfs/QmTMybRq5yyghPDDs1ZCNAVB9sSJ4WHe6Q9mejuKPTAdNP"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IEntryPoint.sol": {
        "keccak256": "0x3a90bf308819ed125fa4202f880999caff8a8686633b8ddb79a30ca240d5b8f8",
        "urls": [
          "bzz-raw://d2d21cc92c2fdab2b58d21bc25d4cd0e8c284b922528a186b087b818d54bc6cf",
          "dweb:/ipfs/QmT1qrfuBjsv2rmRCDn8mgPXHp94hARJwzbcDuBLDTbFWd"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/INonceManager.sol": {
        "keccak256": "0x509871e6c63663cdcc3eba19920fe84e991f38b289b1377ac3c3a6d9f22d7e12",
        "urls": [
          "bzz-raw://00fe21b4349b24c50df60e1a705179293982bd9e7a32b78d4bac9620f89e7fe2",
          "dweb:/ipfs/QmSFFYGfUwQbVa6hASjU7YxTvgi2HkfrPr4X5oPHscHg8b"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/interfaces/IStakeManager.sol": {
        "keccak256": "0xd227b02888cd4ac68daebcdfd992ec00f9fff66fa3b3bb16f656cd582fa3480f",
        "urls": [
          "bzz-raw://b389da4714a138be63704a576a482505eab2855e263b38a93706395d8d42e7c3",
          "dweb:/ipfs/QmeeAZpdHwUXxqP8pxA7GNtoCGBmmH4FaqLLwScVKGxtxZ"
        ],
        "license": "GPL-3.0-only"
      },
      "lib/account-abstraction/contracts/interfaces/UserOperation.sol": {
        "keccak256": "0x61374003361059087fdcf17967a7bba052badeaf5c7f0ae689166f8aafd3a45c",
        "urls": [
          "bzz-raw://6ff83c59432e733bf6304dda27cd4b0f34401917dd535e2669cc842d2d26568c",
          "dweb:/ipfs/QmPJbHU5TAjHqUTZzAcicEeG2nknmwCN43L4EW9LHbknTN"
        ],
        "license": "GPL-3.0"
      },
      "lib/account-abstraction/contracts/samples/callback/TokenCallbackHandler.sol": {
        "keccak256": "0xfff3df5f5211d71158bb017ff791dc4fa85db53890f7bd72bac3a43d89e83752",
        "urls": [
          "bzz-raw://8f91c2d9845513fc88bf73efecd4907d9895b6f9fbe1d6fca09c4d3ad2d787f3",
          "dweb:/ipfs/QmQAFiKpqjVjWrm538tVEYuZvML6iNxNkQAy4UzchJEcpB"
        ],
        "license": "GPL-3.0"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1967.sol": {
        "keccak256": "0x3cbef5ebc24b415252e2f8c0c9254555d30d9f085603b4b80d9b5ed20ab87e90",
        "urls": [
          "bzz-raw://e8fa670c3bdce78e642cc6ae11c4cb38b133499cdce5e1990a9979d424703263",
          "dweb:/ipfs/QmVxeCUk4jL2pXQyhsoNJwyU874wRufS2WvGe8TgPKPqhE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff",
        "urls": [
          "bzz-raw://383fb7b8181016ac5ccf07bc9cdb7c1b5045ea36e2cc4df52bcbf20396fc7688",
          "dweb:/ipfs/QmYJ7Cg4WmE3rR8KGQxjUCXFfTH6TcwZ2Z1f6tPrq7jHFr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol": {
        "keccak256": "0xa2b22da3032e50b55f95ec1d13336102d675f341167aa76db571ef7f8bb7975d",
        "urls": [
          "bzz-raw://96b6d77a20bebd4eb06b801d3d020c7e82be13bd535cb0d0a6b7181c51dab5d5",
          "dweb:/ipfs/QmPUR9Cv9jNFdQX6PtBfaBW1ZCnKwiu65R2VD5kbdanDyn"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Upgrade.sol": {
        "keccak256": "0x3b21ae06bf5957f73fa16754b0669c77b7abd8ba6c072d35c3281d446fdb86c2",
        "urls": [
          "bzz-raw://2db8e18505e86e02526847005d7287a33e397ed7fb9eaba3fd4a4a197add16e2",
          "dweb:/ipfs/QmW9BSuKTzHWHBNSHF4L8XfVuU1uJrP2vLg84YtBd8mL82"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/Proxy.sol": {
        "keccak256": "0xc130fe33f1b2132158531a87734153293f6d07bc263ff4ac90e85da9c82c0e27",
        "urls": [
          "bzz-raw://8831721b6f4cc26534d190f9f1631c3f59c9ff38efdd911f85e0882b8e360472",
          "dweb:/ipfs/QmQZnLErZNStirSQ13ZNWQgvEYUtGE5tXYwn4QUPaVUfPN"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61",
        "urls": [
          "bzz-raw://ada1e030c0231db8d143b44ce92b4d1158eedb087880cad6d8cc7bd7ebe7b354",
          "dweb:/ipfs/QmWZ2NHZweRpz1U9GF6R1h65ri76dnX7fNxLBeM2t5N5Ce"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x3d6069be9b4c01fb81840fb9c2c4dc58dd6a6a4aafaa2c6837de8699574d84c6",
        "urls": [
          "bzz-raw://720d6bb56ea0c4ef781c0bd65c5bd0541f5a46100163b2587170f97658d2deed",
          "dweb:/ipfs/QmTS2biLVPrv8CeeXCaKmkFxonMiRvc1LxiYBRYDAJHQUS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0xc6619957bcc6641fe8984bfaf9ff11a9e4b97d8149c0495f608f9a2416d7c5cf",
        "urls": [
          "bzz-raw://543be67f7fa43b1b932637c1c7f12035f0f4b0f7ee2bd3c33841186f79c165c1",
          "dweb:/ipfs/QmSBPM2UVKbmJqWfD9i6hSiqbaE8TV4TSqfuiivziRRLKM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155Receiver.sol": {
        "keccak256": "0xeb373f1fdc7b755c6a750123a9b9e3a8a02c1470042fd6505d875000a80bde0b",
        "urls": [
          "bzz-raw://0e28648f994abf1d6bc345644a361cc0b7efa544f8bc0c8ec26011fed85a91ec",
          "dweb:/ipfs/QmVVE7AiRjKaQYYji7TkjmTeVzGpNmms5eoxqTCfvvpj6D"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC777/IERC777Recipient.sol": {
        "keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
        "urls": [
          "bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
          "dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Create2.sol": {
        "keccak256": "0x6e00f269073ffc4350e56b7e8153c9092d5f70bfba423299990514183101ef89",
        "urls": [
          "bzz-raw://8dc5ff5c204604be7594ce2fa9100a0638f22b5aada6ebec1e165b0f50a48447",
          "dweb:/ipfs/QmfH7uWphPrq8jqwGvyh4pFnLEgEPmLwyGV2Bvx1Acjggh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0xf09e68aa0dc6722a25bc46490e8d48ed864466d17313b8a0b254c36b54e49899",
        "urls": [
          "bzz-raw://e26daf81e2252dc1fe1ce0e4b55c2eb7c6d1ee84ae6558d1a9554432ea1d32da",
          "dweb:/ipfs/Qmb1UANWiWq5pCKbmHSu772hd4nt374dVaghGmwSVNuk8Q"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0",
        "urls": [
          "bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f",
          "dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x809bc3edb4bcbef8263fa616c1b60ee0004b50a8a1bfa164d8f57fd31f520c58",
        "urls": [
          "bzz-raw://8b93a1e39a4a19eba1600b92c96f435442db88cac91e315c8291547a2a7bcfe2",
          "dweb:/ipfs/QmTm34KVe6uZBZwq8dZDNWwPcm24qBJdxqL3rPxBJ4LrMv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "src/PasskeyAccount.sol": {
        "keccak256": "0x982a4e9401e791abb659eb3a300148c6f074fe12039b3a442d585623bca6a0aa",
        "urls": [
          "bzz-raw://ed7403599a7adeeac284de08b52bed436427e1df16605f1848747868609665dd",
          "dweb:/ipfs/QmZcXXFbK2EjJYpCbY877RE2wQ2tfFnE9TJ6qfVVUUpKg1"
        ],
        "license": "GPL-3.0"
      },
      "src/PasskeyAccountFactory.sol": {
        "keccak256": "0x9cc84055c71c6dceef38fe423a3e763b7f87a1fc5d8bbde8d8e719143d5cd6a3",
        "urls": [
          "bzz-raw://3dec0d73bbc058f2898b3bf9139dcc478d64050e62c65ee1be3673838028e852",
          "dweb:/ipfs/QmSrdtswndHqDdjzVhudih24Fi1h6nEvw6ZfGivihdwhkV"
        ],
        "license": "GPL-3.0"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/PasskeyAccountFactory.sol",
    "id": 34591,
    "exportedSymbols": {
      "Address": [
        31574
      ],
      "BaseAccount": [
        141
      ],
      "Create2": [
        31655
      ],
      "ECDSA": [
        32360
      ],
      "ERC1967Proxy": [
        30514
      ],
      "ERC1967Upgrade": [
        30818
      ],
      "IAccount": [
        396
      ],
      "IAggregator": [
        430
      ],
      "IBeacon": [
        30880
      ],
      "IERC1155Receiver": [
        31206
      ],
      "IERC165": [
        32372
      ],
      "IERC1822Proxiable": [
        30477
      ],
      "IERC1967": [
        30467
      ],
      "IERC721Receiver": [
        31224
      ],
      "IERC777Recipient": [
        31244
      ],
      "IEllipticCurve": [
        33739
      ],
      "IEntryPoint": [
        634
      ],
      "INonceManager": [
        653
      ],
      "IStakeManager": [
        758
      ],
      "Initializable": [
        31049
      ],
      "Math": [
        33238
      ],
      "PasskeyAccount": [
        34440
      ],
      "PasskeyAccountFactory": [
        34590
      ],
      "Proxy": [
        30870
      ],
      "SignedMath": [
        33343
      ],
      "StorageSlot": [
        31765
      ],
      "Strings": [
        31994
      ],
      "TokenCallbackHandler": [
        1079
      ],
      "UUPSUpgradeable": [
        31165
      ],
      "UserOperation": [
        785
      ],
      "UserOperationLib": [
        955
      ],
      "ValidationData": [
        150
      ],
      "_intersectTimeRange": [
        294
      ],
      "_packValidationData": [
        331,
        369
      ],
      "_parseValidationData": [
        209
      ],
      "calldataKeccak": [
        379
      ]
    },
    "nodeType": "SourceUnit",
    "src": "36:2768:50",
    "nodes": [
      {
        "id": 34442,
        "nodeType": "PragmaDirective",
        "src": "36:24:50",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 34443,
        "nodeType": "ImportDirective",
        "src": "62:51:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Create2.sol",
        "file": "@openzeppelin/contracts/utils/Create2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34591,
        "sourceUnit": 31656,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34444,
        "nodeType": "ImportDirective",
        "src": "114:64:50",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34591,
        "sourceUnit": 30515,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34445,
        "nodeType": "ImportDirective",
        "src": "180:30:50",
        "nodes": [],
        "absolutePath": "src/PasskeyAccount.sol",
        "file": "./PasskeyAccount.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 34591,
        "sourceUnit": 34441,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 34590,
        "nodeType": "ContractDefinition",
        "src": "602:2201:50",
        "nodes": [
          {
            "id": 34449,
            "nodeType": "VariableDeclaration",
            "src": "639:53:50",
            "nodes": [],
            "constant": false,
            "functionSelector": "11464fbe",
            "mutability": "immutable",
            "name": "accountImplementation",
            "nameLocation": "671:21:50",
            "scope": 34590,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
              "typeString": "contract PasskeyAccount"
            },
            "typeName": {
              "id": 34448,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 34447,
                "name": "PasskeyAccount",
                "nameLocations": [
                  "639:14:50"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 34440,
                "src": "639:14:50"
              },
              "referencedDeclaration": 34440,
              "src": "639:14:50",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                "typeString": "contract PasskeyAccount"
              }
            },
            "visibility": "public"
          },
          {
            "id": 34464,
            "nodeType": "FunctionDefinition",
            "src": "699:109:50",
            "nodes": [],
            "body": {
              "id": 34463,
              "nodeType": "Block",
              "src": "736:72:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 34461,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34455,
                      "name": "accountImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34449,
                      "src": "746:21:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                        "typeString": "contract PasskeyAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 34459,
                          "name": "_entryPoint",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34452,
                          "src": "789:11:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IEntryPoint_$634",
                            "typeString": "contract IEntryPoint"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IEntryPoint_$634",
                            "typeString": "contract IEntryPoint"
                          }
                        ],
                        "id": 34458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "770:18:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IEntryPoint_$634_$returns$_t_contract$_PasskeyAccount_$34440_$",
                          "typeString": "function (contract IEntryPoint) returns (contract PasskeyAccount)"
                        },
                        "typeName": {
                          "id": 34457,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 34456,
                            "name": "PasskeyAccount",
                            "nameLocations": [
                              "774:14:50"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 34440,
                            "src": "774:14:50"
                          },
                          "referencedDeclaration": 34440,
                          "src": "774:14:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                            "typeString": "contract PasskeyAccount"
                          }
                        }
                      },
                      "id": 34460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "770:31:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                        "typeString": "contract PasskeyAccount"
                      }
                    },
                    "src": "746:55:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                      "typeString": "contract PasskeyAccount"
                    }
                  },
                  "id": 34462,
                  "nodeType": "ExpressionStatement",
                  "src": "746:55:50"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 34453,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34452,
                  "mutability": "mutable",
                  "name": "_entryPoint",
                  "nameLocation": "723:11:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 34464,
                  "src": "711:23:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEntryPoint_$634",
                    "typeString": "contract IEntryPoint"
                  },
                  "typeName": {
                    "id": 34451,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34450,
                      "name": "IEntryPoint",
                      "nameLocations": [
                        "711:11:50"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 634,
                      "src": "711:11:50"
                    },
                    "referencedDeclaration": 634,
                    "src": "711:11:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEntryPoint_$634",
                      "typeString": "contract IEntryPoint"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "710:25:50"
            },
            "returnParameters": {
              "id": 34454,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "736:0:50"
            },
            "scope": 34590,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34539,
            "nodeType": "FunctionDefinition",
            "src": "1188:742:50",
            "nodes": [],
            "body": {
              "id": 34538,
              "nodeType": "Block",
              "src": "1361:569:50",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    34482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34482,
                      "mutability": "mutable",
                      "name": "addr",
                      "nameLocation": "1379:4:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 34538,
                      "src": "1371:12:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 34481,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1371:7:50",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34489,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 34484,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34467,
                        "src": "1397:5:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34485,
                        "name": "salt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34469,
                        "src": "1404:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 34486,
                        "name": "anEllipticCurve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34471,
                        "src": "1410:15:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 34487,
                        "name": "_q",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34475,
                        "src": "1427:2:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      ],
                      "id": 34483,
                      "name": "getAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34589,
                      "src": "1386:10:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (address,uint256,address,uint256[2] memory) view returns (address)"
                      }
                    },
                    "id": 34488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1386:44:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1371:59:50"
                },
                {
                  "assignments": [
                    34491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 34491,
                      "mutability": "mutable",
                      "name": "codeSize",
                      "nameLocation": "1445:8:50",
                      "nodeType": "VariableDeclaration",
                      "scope": 34538,
                      "src": "1440:13:50",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 34490,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "1440:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 34495,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 34492,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34482,
                        "src": "1456:4:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 34493,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1461:4:50",
                      "memberName": "code",
                      "nodeType": "MemberAccess",
                      "src": "1456:9:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "id": 34494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1466:6:50",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1456:16:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1440:32:50"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 34498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 34496,
                      "name": "codeSize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34491,
                      "src": "1486:8:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 34497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1497:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1486:12:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 34507,
                  "nodeType": "IfStatement",
                  "src": "1482:79:50",
                  "trueBody": {
                    "id": 34506,
                    "nodeType": "Block",
                    "src": "1500:61:50",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 34502,
                                  "name": "addr",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 34482,
                                  "src": "1544:4:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 34501,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1536:8:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 34500,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1536:8:50",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 34503,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1536:13:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 34499,
                            "name": "PasskeyAccount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34440,
                            "src": "1521:14:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_PasskeyAccount_$34440_$",
                              "typeString": "type(contract PasskeyAccount)"
                            }
                          },
                          "id": 34504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1521:29:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                            "typeString": "contract PasskeyAccount"
                          }
                        },
                        "functionReturnParameters": 34480,
                        "id": 34505,
                        "nodeType": "Return",
                        "src": "1514:36:50"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 34536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 34508,
                      "name": "ret",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 34479,
                      "src": "1570:3:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                        "typeString": "contract PasskeyAccount"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 34522,
                                      "name": "accountImplementation",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34449,
                                      "src": "1696:21:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                                        "typeString": "contract PasskeyAccount"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                                        "typeString": "contract PasskeyAccount"
                                      }
                                    ],
                                    "id": 34521,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1688:7:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 34520,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1688:7:50",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 34523,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1688:30:50",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 34526,
                                        "name": "PasskeyAccount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 34440,
                                        "src": "1780:14:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_PasskeyAccount_$34440_$",
                                          "typeString": "type(contract PasskeyAccount)"
                                        }
                                      },
                                      "id": 34527,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1795:10:50",
                                      "memberName": "initialize",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 33917,
                                      "src": "1780:25:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$__$",
                                        "typeString": "function PasskeyAccount.initialize(address,address,uint256[2] memory)"
                                      }
                                    },
                                    {
                                      "components": [
                                        {
                                          "id": 34528,
                                          "name": "owner",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 34467,
                                          "src": "1832:5:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 34529,
                                          "name": "anEllipticCurve",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 34471,
                                          "src": "1839:15:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 34530,
                                          "name": "_q",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 34475,
                                          "src": "1856:2:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                            "typeString": "uint256[2] memory"
                                          }
                                        }
                                      ],
                                      "id": 34531,
                                      "isConstant": false,
                                      "isInlineArray": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "TupleExpression",
                                      "src": "1831:28:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$",
                                        "typeString": "tuple(address,address,uint256[2] memory)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$__$",
                                        "typeString": "function PasskeyAccount.initialize(address,address,uint256[2] memory)"
                                      },
                                      {
                                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$",
                                        "typeString": "tuple(address,address,uint256[2] memory)"
                                      }
                                    ],
                                    "expression": {
                                      "id": 34524,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1740:3:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 34525,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "1744:10:50",
                                    "memberName": "encodeCall",
                                    "nodeType": "MemberAccess",
                                    "src": "1740:14:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 34532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1740:141:50",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 34514,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "NewExpression",
                                  "src": "1629:16:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$30514_$",
                                    "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                  },
                                  "typeName": {
                                    "id": 34513,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 34512,
                                      "name": "ERC1967Proxy",
                                      "nameLocations": [
                                        "1633:12:50"
                                      ],
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 30514,
                                      "src": "1633:12:50"
                                    },
                                    "referencedDeclaration": 30514,
                                    "src": "1633:12:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_ERC1967Proxy_$30514",
                                      "typeString": "contract ERC1967Proxy"
                                    }
                                  }
                                },
                                "id": 34519,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "salt"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 34517,
                                        "name": "salt",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 34469,
                                        "src": "1660:4:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 34516,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1652:7:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 34515,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1652:7:50",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 34518,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1652:13:50",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "src": "1629:37:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_payable$_t_address_$_t_bytes_memory_ptr_$returns$_t_contract$_ERC1967Proxy_$30514_$salt",
                                  "typeString": "function (address,bytes memory) payable returns (contract ERC1967Proxy)"
                                }
                              },
                              "id": 34533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1629:270:50",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$30514",
                                "typeString": "contract ERC1967Proxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC1967Proxy_$30514",
                                "typeString": "contract ERC1967Proxy"
                              }
                            ],
                            "id": 34511,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1604:8:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 34510,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1604:8:50",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 34534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1604:309:50",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 34509,
                        "name": "PasskeyAccount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34440,
                        "src": "1576:14:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PasskeyAccount_$34440_$",
                          "typeString": "type(contract PasskeyAccount)"
                        }
                      },
                      "id": 34535,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1576:347:50",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                        "typeString": "contract PasskeyAccount"
                      }
                    },
                    "src": "1570:353:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                      "typeString": "contract PasskeyAccount"
                    }
                  },
                  "id": 34537,
                  "nodeType": "ExpressionStatement",
                  "src": "1570:353:50"
                }
              ]
            },
            "documentation": {
              "id": 34465,
              "nodeType": "StructuredDocumentation",
              "src": "814:369:50",
              "text": " create an account, and return its address.\n returns the address even if the account is already deployed.\n Note that during UserOperation execution, this method is called only if the account is not deployed.\n This method returns an existing account address so that entryPoint.getSenderAddress() would work even after account creation"
            },
            "functionSelector": "240192ec",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createAccount",
            "nameLocation": "1197:13:50",
            "parameters": {
              "id": 34476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34467,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1228:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 34539,
                  "src": "1220:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34466,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1220:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34469,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "1251:4:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 34539,
                  "src": "1243:12:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1243:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34471,
                  "mutability": "mutable",
                  "name": "anEllipticCurve",
                  "nameLocation": "1273:15:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 34539,
                  "src": "1265:23:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1265:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34475,
                  "mutability": "mutable",
                  "name": "_q",
                  "nameLocation": "1316:2:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 34539,
                  "src": "1298:20:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34472,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1298:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34474,
                    "length": {
                      "hexValue": "32",
                      "id": 34473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1306:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1298:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1210:114:50"
            },
            "returnParameters": {
              "id": 34480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34479,
                  "mutability": "mutable",
                  "name": "ret",
                  "nameLocation": "1356:3:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 34539,
                  "src": "1341:18:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                    "typeString": "contract PasskeyAccount"
                  },
                  "typeName": {
                    "id": 34478,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 34477,
                      "name": "PasskeyAccount",
                      "nameLocations": [
                        "1341:14:50"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 34440,
                      "src": "1341:14:50"
                    },
                    "referencedDeclaration": 34440,
                    "src": "1341:14:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                      "typeString": "contract PasskeyAccount"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1340:20:50"
            },
            "scope": 34590,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 34589,
            "nodeType": "FunctionDefinition",
            "src": "2055:746:50",
            "nodes": [],
            "body": {
              "id": 34588,
              "nodeType": "Block",
              "src": "2219:582:50",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 34559,
                            "name": "salt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 34544,
                            "src": "2296:4:50",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 34558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2288:7:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 34557,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2288:7:50",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 34560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2288:13:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 34565,
                                      "name": "ERC1967Proxy",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 30514,
                                      "src": "2397:12:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$30514_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_type$_t_contract$_ERC1967Proxy_$30514_$",
                                        "typeString": "type(contract ERC1967Proxy)"
                                      }
                                    ],
                                    "id": 34564,
                                    "name": "type",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -27,
                                    "src": "2392:4:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 34566,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2392:18:50",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_meta_type_t_contract$_ERC1967Proxy_$30514",
                                    "typeString": "type(contract ERC1967Proxy)"
                                  }
                                },
                                "id": 34567,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2411:12:50",
                                "memberName": "creationCode",
                                "nodeType": "MemberAccess",
                                "src": "2392:31:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 34572,
                                        "name": "accountImplementation",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 34449,
                                        "src": "2497:21:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                                          "typeString": "contract PasskeyAccount"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_PasskeyAccount_$34440",
                                          "typeString": "contract PasskeyAccount"
                                        }
                                      ],
                                      "id": 34571,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2489:7:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 34570,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2489:7:50",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 34573,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2489:30:50",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 34576,
                                          "name": "PasskeyAccount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 34440,
                                          "src": "2597:14:50",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_PasskeyAccount_$34440_$",
                                            "typeString": "type(contract PasskeyAccount)"
                                          }
                                        },
                                        "id": 34577,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberLocation": "2612:10:50",
                                        "memberName": "initialize",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 33917,
                                        "src": "2597:25:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$__$",
                                          "typeString": "function PasskeyAccount.initialize(address,address,uint256[2] memory)"
                                        }
                                      },
                                      {
                                        "components": [
                                          {
                                            "id": 34578,
                                            "name": "owner",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 34542,
                                            "src": "2657:5:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 34579,
                                            "name": "anEllipticCurve",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 34546,
                                            "src": "2664:15:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          {
                                            "id": 34580,
                                            "name": "_q",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 34550,
                                            "src": "2681:2:50",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                              "typeString": "uint256[2] memory"
                                            }
                                          }
                                        ],
                                        "id": 34581,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "2656:28:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$",
                                          "typeString": "tuple(address,address,uint256[2] memory)"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$returns$__$",
                                          "typeString": "function PasskeyAccount.initialize(address,address,uint256[2] memory)"
                                        },
                                        {
                                          "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_array$_t_uint256_$2_memory_ptr_$",
                                          "typeString": "tuple(address,address,uint256[2] memory)"
                                        }
                                      ],
                                      "expression": {
                                        "id": 34574,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "2549:3:50",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 34575,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2553:10:50",
                                      "memberName": "encodeCall",
                                      "nodeType": "MemberAccess",
                                      "src": "2549:14:50",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 34582,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2549:165:50",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 34568,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "2449:3:50",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 34569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "2453:6:50",
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "2449:10:50",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 34583,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2449:291:50",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 34562,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "2350:3:50",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 34563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "2354:12:50",
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "2350:16:50",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 34584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2350:412:50",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 34561,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "2319:9:50",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 34585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2319:461:50",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 34555,
                        "name": "Create2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31655,
                        "src": "2248:7:50",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Create2_$31655_$",
                          "typeString": "type(library Create2)"
                        }
                      },
                      "id": 34556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2256:14:50",
                      "memberName": "computeAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31640,
                      "src": "2248:22:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                        "typeString": "function (bytes32,bytes32) view returns (address)"
                      }
                    },
                    "id": 34586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2248:546:50",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 34554,
                  "id": 34587,
                  "nodeType": "Return",
                  "src": "2229:565:50"
                }
              ]
            },
            "documentation": {
              "id": 34540,
              "nodeType": "StructuredDocumentation",
              "src": "1936:114:50",
              "text": " calculate the counterfactual address of this account as it would be returned by createAccount()"
            },
            "functionSelector": "66a44a7c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "2064:10:50",
            "parameters": {
              "id": 34551,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34542,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "2092:5:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 34589,
                  "src": "2084:13:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34541,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2084:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34544,
                  "mutability": "mutable",
                  "name": "salt",
                  "nameLocation": "2115:4:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 34589,
                  "src": "2107:12:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 34543,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2107:7:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34546,
                  "mutability": "mutable",
                  "name": "anEllipticCurve",
                  "nameLocation": "2137:15:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 34589,
                  "src": "2129:23:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 34550,
                  "mutability": "mutable",
                  "name": "_q",
                  "nameLocation": "2180:2:50",
                  "nodeType": "VariableDeclaration",
                  "scope": 34589,
                  "src": "2162:20:50",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 34547,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2162:7:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 34549,
                    "length": {
                      "hexValue": "32",
                      "id": 34548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2170:1:50",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "2162:10:50",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2074:114:50"
            },
            "returnParameters": {
              "id": 34554,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 34553,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 34589,
                  "src": "2210:7:50",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 34552,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2210:7:50",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2209:9:50"
            },
            "scope": 34590,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "PasskeyAccountFactory",
        "contractDependencies": [
          30514,
          34440
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 34446,
          "nodeType": "StructuredDocumentation",
          "src": "212:389:50",
          "text": " A sample factory contract for PasskeyAccount\n A UserOperations \"initCode\" holds the address of the factory, and a method call (to createAccount, in this sample factory).\n The factory's createAccount returns the target account address even if it is already installed.\n This way, the entryPoint.getSenderAddress() can be called either before or after the account is created."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          34590
        ],
        "name": "PasskeyAccountFactory",
        "nameLocation": "611:21:50",
        "scope": 34591,
        "usedErrors": []
      }
    ],
    "license": "GPL-3.0"
  },
  "id": 50
}